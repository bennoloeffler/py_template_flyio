# README for {{ project_name }}

{{ description }}

## 🔐 Admin Credentials

Default admin user (created automatically on first startup):

- **Admin Email**: `admin@{{ project_name }}.de`
- **Admin Password**: `admin123` (or set via `ADMIN_PASSWORD` environment variable)

**IMPORTANT**: Change the admin password immediately after first login!

To use a custom admin password, set the `ADMIN_PASSWORD` environment variable:
```bash
export ADMIN_PASSWORD="your-secure-password"
# or add to .env file:
echo "ADMIN_PASSWORD=your-secure-password" >> .env
```

## Installation

call 
``` bash
# statusline for claude code
npx ccstatusline@latest

# chrome dev tools
claude mcp add chrome-devtools npx chrome-devtools-mcp@latest

# add context7 mcp
claude mcp add -s user context7 -- npx -y @upstash/context7-mcp

# add postgress mcp: use right db and pw
claude mcp add -s user pg npx @executeautomation/database-server -- --postgresql --host localhost --database {{ module_name }} --user $PG_USER --password $PG_PASSWORD

# send "all files in one shot" to gemini
claude mcp add -s user consult7 uvx -- consult7 google AIxxxxxxxxxxJU

# memory bank for ONE PROJECT
claude mcp add --scope user memory-bank -e MEMORY_BANK_ROOT=~/.claude/memory-bank -- npx -y @allpepper/memory-bank-mcp

# knowledge about ALL PROJECTS
claude mcp add --scope user knowledge-graph -e GRAPH_STORAGE_PATH=~/.claude/knowledge-graph -- npx -y mcp-knowledge-graph

# HAS A BUG"!
# have a kind of cheap RAG 
# add a dir
leann build my-docs-name --docs ./your_documents
# add mcp server
claude mcp add --scope user leann-server -- leann_mcp
https://github.com/yichuan-w/LEANN

# debug by reading and clicking browser
claude mcp add --scope user puppeteer npx @agent-infra/mcp-server-browser@latest

# to use moonshot.ch as model for claude
source set_kimi_as_antrophic.sh
claude

# run app (on any other free port will work also)
uv run uvicorn {{ module_name }}.main:app --reload --port 8877

# open in browser
open http://localhost:8877/

# run tests
uv run pytest

# commit, push, tag and deploy to TESTING website
./fly_deploy_test.sh

# commit, push, tag and deploy to PRODUCTION website
./fly_deploy_prod_fly.sh

```

