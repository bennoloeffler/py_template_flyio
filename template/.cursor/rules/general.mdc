---
description: 
globs: 
alwaysApply: true
---
** DONT ASK TOOO MUCH ** 
whenever you ask for permission to do something,
- preferably have a question that can be answered with Y or N and show the user: 
  "Do you want it? Y/n"
  So the default is Y, what ever the user types - ONLY if the user EXPLICITLY REFUSES, with a n (or something similar clear) its no.
- If there are options, show the options with numbers: 1, 2, 3, 4 and ask for those numbers: 
  Provide a default, that you think is the best.
  "Which Option do you want: 1/2/3/4... default=2 ?"
  So if the user does not exlicitely vote for the non-default options, go for the default. 

** when you implement features **
You may break those rules - but this is always the "default", until it's not, because there is a reason.
- try to PURE functions: write functions that have no side effects AT ALL: no readeing or writing except prints/logs.
- try to TYPE with pydantic
- try to DRY - use available functions and factor out names, values, functions: whenever you suspect code duplication
- try to COMMENT all functions you write. BUT NOT THE CODE ITSELF. Write code that documents itself, because it is readable and simple. 
- try to API - mark all internal functions. All Components should have a clear, documented API.
- try to TEST, whenever you write new features. ALWAYS write tests for new features.
- try to CHECK your code with './check.sh' whenever you finished feature and the tests - get feedback and improve until tests run
- try to SPLIT files (code and the corresponding tests), when the code is much more than 300 lines
- try to SHORT lines that are 78 characters long maximum. Create meaningful breaks.
  
** when you add packages **
- NEVER use pip to install packages. ALWAYS use 
  - uv add <package>
  - uv sync
  - uv remove
  - if you are stuck: call 'uv --help' to get an idea

