# copier.yml - Template configuration file

# Template metadata
_subdirectory: template
_templates_suffix: .jinja
_envops:
  block_end_string: "%}"
  block_start_string: "{%"
  comment_end_string: "#}"
  comment_start_string: "{#"
  keep_trailing_newline: true
  variable_end_string: "}}"
  variable_start_string: "{{"

# Questions
project_name:
  type: str
  help: Name of the project
  default: "{{ _copier_conf.dst_path | lower | replace('_', '-') | replace(' ', '-') | basename }}"

module_name:
  type: str
  help: Name of the main Python module (in snake_case)
  default: "{{  _copier_conf.dst_path |lower|replace('-', '_')|replace(' ', '_') }}"

description:
  type: str
  help: Project description
  default: ...

author_name:
  type: str
  help: Author name
  default: Benno Loeffler

author_email:
  type: str
  help: Author email
  default: benno.loeffler@gmx.de

python_version:
  type: str
  help: Minimum Python version
  default: "3.11"
  choices:
    - "3.8"
    - "3.9"
    - "3.10"
    - "3.11"
    - "3.12"

admin_password:
  type: str
  help: Initial admin password (WRITE THIS DOWN - shown only once!)
  secret: false  # Show the password so user can save it
  default: "{% raw %}{{ 999999999999 | random | hash('sha256') | truncate(12, True, '') }}{% endraw %}"


dependencies:
  type: str
  help: Dependencies (comma-separated list)
  default: "pydantic, pydantic-settings, fastapi[all], uvicorn, slowapi, httpx, asyncpg, passlib[bcrypt], python-jose[cryptography], python-multipart, Pillow, markdown-it-py, Jinja2"

development_dependencies:
  type: str
  help: Development dependencies (comma-separated list)
  default: "pytest, pytest-watch, pytest-asyncio, black, ruff, mypy, httpx, types-passlib, types-python-jose"

# Template migration settings
_skip_if_exists:
  - README.md

_tasks:
  # Try to create databases (may fail if PostgreSQL not running - that's OK)
  - "createdb -U postgres -h localhost -p 5432 {{ module_name }} || echo 'Note: Could not create database {{ module_name }} - ensure PostgreSQL is running'"
  - "createdb -U postgres -h localhost -p 5432 {{ module_name }}_test || echo 'Note: Could not create test database {{ module_name }}_test'"

  # Create virtual environment
  - "uv venv"

  # Initialize git repo
  - "git init"

  # Install dependencies
  - "uv sync --extra dev || echo 'Note: uv sync failed - run manually after fixing any issues'"

  # Run quality checks (may fail on first run - that's expected)
  - "./check.sh || echo 'Note: Some checks failed - this is normal for first run'"

  # Note: Do NOT auto-add files to git - let user review first
  # Note: Fly.io setup is manual - see README.md for instructions
  #- "fly secrets set OPENAI_API_KEY=$OPENAI_API_KEY"
  #- "fly -c fly.prod.toml secrets set OPENAI_API_KEY=$OPENAI_API_KEY"
  #- "fly secrets set DB_FOLDER=/data"
  #- "fly -c fly.prod.toml secrets set DB_FOLDER=/data"
  #- "flyctl volumes create bels_volume --region fra --size 1"



  #- "./deploy_prod_fly.sh"